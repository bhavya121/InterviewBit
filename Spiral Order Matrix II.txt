/*Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.

Example:

Given n = 3,

You should return the following matrix:

[
  [ 1, 2, 3 ],
  [ 8, 9, 4 ],
  [ 7, 6, 5 ]
]
*/


/**
 * @input A : Integer
 * 
 * @Output 2D int array. You need to malloc memory. Fill in len1 as row, len2 as columns 
 */
int ** generateMatrix(int A, int *len1, int *len2) {
    int t=0;
    *len1=A;
    *len2=A;
    int b=A;
    int l=0;
    int r=A;
    int x=1;
    int i;
     int **arr=(int**)malloc(sizeof(int*)*A);
    for(i=0;i<A;i++)
    {
       arr[i]=(int*)malloc(sizeof(int)*A); 
    }
    while(t<b&&l<r)
    {
        for(i=l;i<r;i++,x++)
        {
            arr[t][i]=x;
        }
        t++;
        for(i=t;i<b;i++,x++)
        {
            arr[i][r-1]=x;
        }
        r--;
        if(t<b)
        {
            for(i=r-1;i>=l;i--,x++)
            {
                arr[b-1][i]=x;
            }
            b--;
        }
        if(l<r)
        {
            for(i=b-1;i>=t;i--,x++)
            {
                arr[i][l]=x;
            }
            l++;
        }
    }
    
    return arr;
}
